{"version":3,"sources":["components/Bubble.js","components/BubbleWrapper.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["colorArray","Bubble","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickBubble","state","pose","setState","clearTimeout","timeout","setTimeout","deleteBubble","renderTextContent","react_default","a","createElement","style","styles","bigText","bitcoinPrice","addr","txIndex","BubblePose","posed","div","end","scale","transition","duration","ease","middle","delay","Math","floor","random","type","stiffness","damping","start","fill","left","top","_this2","animationEnd","position","concat","background","round","zIndex","objectSpread","bubble","initialPose","onClick","Component","height","width","borderRadius","display","alignItems","justifyContent","color","cursor","fontSize","BubbleWrapper","calculateScale","price","percentageOfMinValue","log","minValue","min","onNewTransaction","event","JSON","parse","data","x","out","forEach","outputObject","value","newBubbleSymbol","Symbol","bitcoinPriceInBtc","max","newBubble","Bubble_Bubble","key","bind","assertThisInitialized","tx_index","bubbles","defineProperty","deleteSymbol","currentBubblesState","omit","renderBubbles","getOwnPropertySymbols","bubbleWrapper","map","bubbleSymbol","socket","WebSocket","addEventListener","send","Header","titleWrapper","title","inputWrapper","minValueInput","onChange","onChangeMinValue","input","textAlign","alignSelf","padding","marginTop","fontWeight","border","lineHeight","backgroundColor","outline","marginLeft","marginRight","App","parseFloat","target","Header_Header","BubbleWrapper_BubbleWrapper","boxSizing","overflow","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kNAGMA,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,WAE1DC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAyDVQ,cAAgB,WACY,SAApBP,EAAKQ,MAAMC,MACXT,EAAKU,SAAS,CACVD,KAAM,SAEVE,aAAaX,EAAKY,WAElBZ,EAAKU,SAAS,CACVD,KAAM,QAEVI,WAAW,WACPb,EAAKD,MAAMe,gBACZ,OAtEQd,EA2EnBe,kBAAoB,WAChB,MAAwB,SAApBf,EAAKQ,MAAMC,KAEPO,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAOC,SACfL,EAAAC,EAAAC,cAAA,WAAMlB,EAAKD,MAAMuB,aAAjB,SACAN,EAAAC,EAAAC,cAAA,uBAAelB,EAAKD,MAAMwB,MAC1BP,EAAAC,EAAAC,cAAA,wBAAgBlB,EAAKD,MAAMyB,UAKnCR,EAAAC,EAAAC,cAAA,WACKlB,EAAKD,MAAMuB,aADhB,SAlFJtB,EAAKyB,WAAaC,IAAMC,IAAI,CACxBC,IAAK,CACDC,MAAO,EACPC,WAAY,CACRC,SAAU,IACVC,KAAM,cAGdC,OAAQ,CACJJ,MAAO7B,EAAKD,MAAM8B,MAClBK,MAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBP,WAAY,CACRQ,KAAM,SACNC,UAAW,IACXC,QAAS,KAGjBC,MAAO,CACHZ,MAAO,GAEXa,KAAM,CACFb,MAAO,GACPc,KAAM,MACNC,IAAK,MACLd,WAAY,CACRQ,KAAM,SACNC,UAAW,IACXC,QAAS,OAKrBxC,EAAKQ,MAAQ,CACTC,KAAM,UAGVT,EAAK2C,KAAOR,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BrC,EAAK4C,IAAMT,KAAKC,MAAsB,IAAhBD,KAAKE,UAzCZrC,mFA4CC,IAAA6C,EAAA1C,KAEhBA,KAAKS,QAAUC,WAAW,WACtBgC,EAAKnC,SAAS,CACVD,KAAM,QAEVI,WAAW,WACPgC,EAAK9C,MAAMe,gBACZ,MACJX,KAAKJ,MAAM+C,+CAyCd,IAAMC,EAAW,CACbJ,KAAI,GAAAK,OAAK7C,KAAKwC,KAAV,KACJC,IAAG,GAAAI,OAAK7C,KAAKyC,IAAV,KACHK,WAAYpD,EAAWsC,KAAKe,MAAM/C,KAAKJ,MAAM8B,QAC7CsB,OAA4B,SAApBhD,KAAKK,MAAMC,KAAkB,EAAI,GAG7C,OACIO,EAAAC,EAAAC,cAAAf,KAAMsB,WAAN,CACIN,MAAKlB,OAAAmD,EAAA,EAAAnD,CAAA,GAAMmB,EAAOiC,OAAWN,GAC7BtC,KAAMN,KAAKK,MAAMC,KACjB6C,YAAY,QACZC,QAASpD,KAAKI,eAEbJ,KAAKY,4BA9GDyC,aAoHfpC,EAAS,CACXiC,OAAQ,CACJI,OAAQ,QACRC,MAAO,QACPC,aAAc,QACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,UACPhB,SAAU,WACViB,OAAQ,WAEZ3C,QAAS,CACL4C,SAAU,yBClIZC,cACF,SAAAA,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACflE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KAeVoE,eAAiB,SAACC,GACd,IAAMC,EAAuBlC,KAAKmC,KAAMF,EAAQ,IAAOpE,EAAKD,MAAMwE,UAClE,OAAOpC,KAAKqC,IAAIH,EAAsB,IAlBvBrE,EAsBnByE,iBAAmB,SAACC,GACHC,KAAKC,MAAMF,EAAMG,MACLC,EAAEC,IACfC,QAAQ,SAACC,GACjB,IAAM3D,EAAe2D,EAAaC,MAClC,GAAI5D,GAAgBtB,EAAKD,MAAMwE,SAAU,CACrC,IAAMY,EAAkBC,SAClBC,EAAoBlD,KAAKe,MAAO5B,EAAe,IAAa,KAAO,IACnEwB,EAAeX,KAAKmD,IAAI,IAAMnD,KAAKC,MAAsB,IAAhBD,KAAKE,WAC9CkD,EACFvE,EAAAC,EAAAC,cAACsE,EAAD,CACI1C,aAAcA,EACdxB,aAAc+D,EACdI,IAAKtD,KAAKE,SACVR,MAAO7B,EAAKmE,eAAe7C,GAC3BR,aAAcd,EAAKc,aAAa4E,KAAlBzF,OAAA0F,EAAA,EAAA1F,QAAA0F,EAAA,EAAA1F,CAAAD,IAA6BmF,GAC3C5D,KAAM0D,EAAa1D,KACnBC,QAASyD,EAAaW,WAG9B5F,EAAKU,SAAS,CACVmF,QAAQ5F,OAAAmD,EAAA,EAAAnD,CAAA,GACDD,EAAKQ,MAAMqF,QADX5F,OAAA6F,EAAA,EAAA7F,CAAA,GAEFkF,EAAkBI,UA7CpBvF,EAqDnBc,aAAe,SAACiF,GACZ,IAAMC,EAAsBC,IAAKjG,EAAKQ,MAAMqF,QAASE,GACrD/F,EAAKU,SAAS,CACVmF,QAAQ5F,OAAAmD,EAAA,EAAAnD,CAAA,GACD+F,MAzDIhG,EA8DnBkG,cAAgB,WACZ,IAAML,EAAU5F,OAAOkG,sBAAsBnG,EAAKQ,MAAMqF,SACxD,OACI7E,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAOgF,eACdP,EAAQQ,IAAI,SAACC,GACV,OACItG,EAAKQ,MAAMqF,QAAQS,OAlEnCtG,EAAKQ,MAAQ,CACTqF,QAAS,IAHE7F,mFAOC,IAAA6C,EAAA1C,KACVoG,EAAS,IAAIC,UAAU,gCAC7BD,EAAOE,iBAAiB,OAAQ,SAAC/B,GAC7B6B,EAAOG,KAAK,+BACZH,EAAOE,iBAAiB,UAAW5D,EAAK4B,qDAiE5C,OACItE,KAAK+F,uBA9EY1C,aAmFvBpC,EAAS,CACXgF,cAAe,CACXrD,SAAU,WACVU,OAAQ,MACRC,MAAO,QCzFTiD,EAAS,SAAC5G,GACZ,OACIiB,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAOwF,cACf5F,EAAAC,EAAAC,cAAA,MAAIC,MAAOC,EAAOyF,OAAlB,oCAGA7F,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAO0F,cACf9F,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,SACIoB,KAAK,OACL4C,MAAOnF,EAAMgH,cACbC,SAAUjH,EAAMkH,iBAChB9F,MAAOC,EAAO8F,QAElBlG,EAAAC,EAAAC,cAAA,sBAMVE,EAAS,CACXyF,MAAO,CACHM,UAAW,UAEfL,aAAc,CACVlD,QAAS,OACTE,eAAgB,SAChBD,WAAY,UAEhB+C,aAAc,CACV3D,WAAY,OACZkE,UAAW,SACXhE,OAAQ,GACRQ,aAAc,GACdyD,UAAW,aACXC,QAAS,OACTC,UAAW,OACXvD,MAAO,UACPwD,WAAY,KAEhBL,MAAO,CACHxD,MAAO,OACPD,OAAQ,OACRQ,SAAU,OACVoD,QAAS,WACTG,OAAQ,OACR7D,aAAc,MACd4D,WAAY,IACZE,WAAY,SACZC,gBAAiB,UACjB3D,MAAO,UACP4D,QAAS,OACTC,WAAY,OACZC,YAAa,SCpDfC,cACJ,SAAAA,EAAY/H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,IACjB9H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6H,GAAAxH,KAAAH,KAAMJ,KAORkH,iBAAmB,SAACvC,GAClB1E,EAAKU,SAAS,CACZ6D,SAA2C,IAAjCwD,WAAWrD,EAAMsD,OAAO9C,QAAsB,EACxD6B,cAAerC,EAAMsD,OAAO9C,SAT9BlF,EAAKQ,MAAQ,CACX+D,SAAU,IACVwC,cAAe,KAJA/G,wEAgBjB,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,MAAOC,EAAO6B,YACjBjC,EAAAC,EAAAC,cAAC+G,EAAD,CACElB,cAAe5G,KAAKK,MAAMuG,cAC1BE,iBAAkB9G,KAAK8G,mBAEzBjG,EAAAC,EAAAC,cAACgH,EAAD,CACE3D,SAAUpE,KAAKK,MAAM+D,mBAxBbf,aA+BZpC,EAAS,CACb6B,WAAY,CACVQ,OAAQ,QACRR,WAAY,UACZkF,UAAW,aACXvE,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBsE,SAAU,WC/BMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3H,EAAAC,EAAAC,cAAC0H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.11fc0502.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport posed from 'react-pose';\n\nconst colorArray = ['#FFFBD6', '#F9F2B2', '#F9EFA2', '#FAED85', '#FDEC61']\n\nclass Bubble extends Component {\n\n    constructor(props) {                \n        super(props)\n\n        // initialises the bubble and creates a pose div. \n        this.BubblePose = posed.div({\n            end: {\n                scale: 0,                \n                transition: {                    \n                    duration: 400,\n                    ease: 'easeInOut'\n                }\n            },\n            middle: {\n                scale: this.props.scale,\n                delay: Math.floor(Math.random() * 3000), // starts  \n                transition: {\n                    type: 'spring',\n                    stiffness: 300,\n                    damping: 10\n                }\n            },\n            start: {\n                scale: 0,                \n            },\n            fill: {                \n                scale: 10,\n                left: '42%',\n                top: '40%',\n                transition: {\n                    type: 'spring',\n                    stiffness: 300,\n                    damping: 10\n                }\n            }\n        });\n\n        this.state = {\n            pose: 'middle'\n        }\n\n        this.left = Math.floor(Math.random() * 100)\n        this.top = Math.floor(Math.random() * 100) \n    }\n\n    componentDidMount() {\n        // Hides bubble after animation end\n        this.timeout = setTimeout(() => {\n            this.setState({\n                pose: 'end'\n            })        \n            setTimeout(() => {\n                this.props.deleteBubble()\n            }, 400);\n        }, this.props.animationEnd);\n        \n    }\n\n    // Changes pose if bubble is clicked\n    onClickBubble = () => {\n        if (this.state.pose !== 'fill') {\n            this.setState({\n                pose: 'fill'\n            })\n            clearTimeout(this.timeout)            \n        } else {\n            this.setState({\n                pose: 'end'\n            })\n            setTimeout(() => {\n                this.props.deleteBubble()\n            }, 400);\n        }        \n    }\n    \n    // renders dynamic text content, depends on clicked or not\n    renderTextContent = () => {\n        if (this.state.pose === 'fill') {\n            return (\n                <div style={styles.bigText}>\n                    <div>{this.props.bitcoinPrice} BTC </div>\n                    <div>Address: {this.props.addr}</div>\n                    <div>Tx Index: {this.props.txIndex}</div>\n                </div>\n            )\n        } else {\n            return (\n            <div>\n                {this.props.bitcoinPrice} BTC \n            </div>\n            )\n        }\n    }\n\n    render() { \n        const position = {\n            left: `${this.left}%`,\n            top: `${this.top}%`,\n            background: colorArray[Math.round(this.props.scale)],\n            zIndex: this.state.pose === 'fill' ? 5 : 1\n        }\n        \n        return (\n            <this.BubblePose \n                style={{...styles.bubble, ...position}}         \n                pose={this.state.pose} \n                initialPose='start'\n                onClick={this.onClickBubble}\n            >\n                {this.renderTextContent()}\n            </this.BubblePose>\n        );\n    }\n}\n\nconst styles = {\n    bubble: {\n        height: '100px',\n        width: '100px',\n        borderRadius: '300px',        \n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#004A7C',\n        position: 'absolute',\n        cursor: 'pointer'\n    },\n    bigText: {\n        fontSize: '3px'\n    }\n}\nexport {Bubble}","import React, { Component } from 'react';\nimport { Bubble } from './Bubble';\nimport omit from 'lodash/omit'\n\nclass BubbleWrapper  extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {            \n            bubbles: {},                        \n        }\n    }\n\n    componentDidMount() {        \n        const socket = new WebSocket('wss://ws.blockchain.info/inv');\n        socket.addEventListener('open', (event) => {\n            socket.send('{ \"op\": \"unconfirmed_sub\" }');                \n            socket.addEventListener('message', this.onNewTransaction)\n        });\n    }\n\n    // Scale of bubbles is relative to the size of transcation\n    calculateScale = (price) => {\n        const percentageOfMinValue = Math.log(((price + 0.5) / this.props.minValue))\n        return Math.min(percentageOfMinValue, 3)\n    }\n\n\n    onNewTransaction = (event) => {        \n        const data = JSON.parse(event.data)\n        const outputArray = data.x.out        \n        outputArray.forEach((outputObject) => {\n            const bitcoinPrice = outputObject.value\n            if (bitcoinPrice >= this.props.minValue) {\n                const newBubbleSymbol = Symbol()\n                const bitcoinPriceInBtc = Math.round((bitcoinPrice / 100000000) * 100) / 100                                \n                const animationEnd = Math.max(4000, Math.floor(Math.random() * 6000)) \n                const newBubble = (\n                    <Bubble\n                        animationEnd={animationEnd} // animation ends randomly\n                        bitcoinPrice={bitcoinPriceInBtc}\n                        key={Math.random()}\n                        scale={this.calculateScale(bitcoinPrice)}\n                        deleteBubble={this.deleteBubble.bind(this, newBubbleSymbol)}\n                        addr={outputObject.addr}\n                        txIndex={outputObject.tx_index}\n                    />\n                )\n                this.setState({\n                    bubbles: {\n                        ...this.state.bubbles,\n                        [newBubbleSymbol]: newBubble                    \n                    },                \n                })\n            }        \n        })\n    }\n\n    // Deletes bubble from state so that the memory can last\n    deleteBubble = (deleteSymbol) => {        \n        const currentBubblesState = omit(this.state.bubbles, deleteSymbol)\n        this.setState({\n            bubbles: {\n                ...currentBubblesState\n            }\n        })        \n    }\n\n    renderBubbles = () => {\n        const bubbles = Object.getOwnPropertySymbols(this.state.bubbles)                        \n        return (\n            <div style={styles.bubbleWrapper}>\n                {bubbles.map((bubbleSymbol) => {\n                    return (\n                        this.state.bubbles[bubbleSymbol]\n                    )\n                })}\n            </div>\n        )\n    }\n\n    render() {\n        return (            \n            this.renderBubbles()            \n        );\n    }\n}\n\nconst styles = {\n    bubbleWrapper: {\n        position: 'absolute',        \n        height: '60%',\n        width: '60%',\n    }\n}\n\nexport {BubbleWrapper};\n","import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <div style={styles.titleWrapper}>\n            <h1 style={styles.title}>\n                Unconfirmed Bitcoin transactions\n            </h1>\n            <h2>Click on bubbles for more info</h2>\n            <div style={styles.inputWrapper}>\n                <span>Minimum value of transaction</span>\n                <input\n                    type=\"text\"\n                    value={props.minValueInput}\n                    onChange={props.onChangeMinValue}\n                    style={styles.input}\n                />\n                <span>BTC</span>\n            </div>\n        </div>\n    )\n}\n\nconst styles = {    \n    title: {\n        textAlign: 'center'\n    },\n    inputWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    titleWrapper: {\n        background: '#fff',\n        textAlign: 'center',\n        zIndex: 10,\n        borderRadius: 30,\n        alignSelf: 'flex-start',\n        padding: '17px',\n        marginTop: '10px',\n        color: '#004A7C',\n        fontWeight: 700\n    },\n    input: {\n        width: '100%',\n        height: '45px',\n        fontSize: '19px',\n        padding: '0px 16px',\n        border: 'none',\n        borderRadius: '4px',\n        fontWeight: 400,\n        lineHeight: 'normal',\n        backgroundColor: '#959595',\n        color: '#004A7C',\n        outline: 'none',\n        marginLeft: '10px',\n        marginRight: '10px',\n\n    }\n}\n\nexport {Header}","import React, { Component } from 'react';\nimport {BubbleWrapper} from './BubbleWrapper'\nimport { Header } from './Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {      \n      minValue: 100000000,\n      minValueInput: '1'\n    }\n  }\n  \n  onChangeMinValue = (event) => {        \n    this.setState({\n      minValue: parseFloat(event.target.value) * 100000000 || 0,\n      minValueInput: event.target.value\n    })\n  } \n  \n  render() {        \n    return (\n      <div style={styles.background}>    \n        <Header \n          minValueInput={this.state.minValueInput}\n          onChangeMinValue={this.onChangeMinValue}\n        />\n        <BubbleWrapper \n          minValue={this.state.minValue}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  background: {\n    height: '100vh',\n    background: '#004A7C',\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'  \n  }  \n}\n\nexport {App};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport {App} from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}